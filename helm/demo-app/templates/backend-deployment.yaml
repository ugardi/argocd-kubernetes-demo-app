apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-backend
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Chart.Name }}-backend
    version: {{ .Chart.AppVersion }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-backend
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
    spec:
      initContainers:
      - name: wait-for-postgres
        image: postgres:15-alpine
        command:
        - /bin/sh
        - -c
        - |
          until pg_isready -h {{ .Chart.Name }}-postgresql -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done
          echo "PostgreSQL is ready!"
        env:
        - name: PGPASSWORD
          value: {{ .Values.postgresql.auth.password | quote }}
      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        ports:
        - containerPort: 3001
        env:
        - name: PORT
          value: "3001"
        - name: DB_HOST
          value: "{{ .Chart.Name }}-postgresql"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: {{ .Values.postgresql.auth.database | quote }}
        - name: DB_USER
          value: {{ .Values.postgresql.auth.username | quote }}
        - name: DB_PASSWORD
          value: {{ .Values.postgresql.auth.password | quote }}
        startupProbe:
          httpGet:
            path: /health
            port: 3001
          failureThreshold: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
        resources:
          {{- toYaml .Values.backend.resources | nindent 12 }}